// This file is auto-generated by trix bindgen.

import {
  Client as TRPClient,
  type ClientOptions,
  type SubmitParams,
  type ResolveResponse,
} from "tx3-sdk/trp";


export const DEFAULT_TRP_ENDPOINT = "http://localhost:3000/trp";

export const DEFAULT_HEADERS = {
};

export const DEFAULT_ENV_ARGS = {
};

export type LockParams = {
    beneficiary: string;
    owner: string;
    quantity: number;
    until: number;
}

export const LOCK_IR = {
    bytecode: "0d03000106736f757263650d0206736f757263650d01056f776e6572050c0100000d01087175616e74697479020000020f00091cf8e3ca438e81623f59539c8d5ca14a15bccd54b299538c8d32fd71a60300030d0105756e74696c020d01056f776e6572050d010b62656e6566696369617279050c0100000d01087175616e74697479020d01056f776e657205000e020e0210010d0206736f757263650d01056f776e6572050c0100000d01087175616e7469747902000c0100000d01087175616e74697479020d03000000000000",
    encoding: "hex",
    version: "v1alpha7",
};

export type UnlockParams = {
    beneficiary: string;
    locked: string;
}

export const UNLOCK_IR = {
    bytecode: "0d03000206736f757263650d0206736f757263650f00091cf8e3ca438e81623f59539c8d5ca14a15bccd54b299538c8d32fd71a6000d01066c6f636b656407030000036761730d02036761730d010b62656e6566696369617279050d030000010d010b62656e656669636961727905000e020e0110010d0206736f757263650f00091cf8e3ca438e81623f59539c8d5ca14a15bccd54b299538c8d32fd71a6000d01066c6f636b65640710010d02036761730d010b62656e6566696369617279050d03000d030000010e706c757475735f7769746e657373020673637269707404fbd4015901d101010029800aba2aba1aba0aab9faab9eaab9dab9cab9a4888888896600264653001300900198049805000cdc3a400530090024888966002600460126ea800e2646644b30013370e900018061baa0018cc004c040c034dd5000c8c044c048c048c048c048c048c048c048c04800644646600200200644b30010018a508acc004cdc79bae30140010038a51899801001180a800a01c40489112cc004cc004dd6180118081baa007375c6026602860206ea800e29462b3001330013758600460206ea801cdd71809980a180a18081baa003899191919912cc004c034c050dd50014566002601a60286ea8c060c06400e266e20004dd6980c180a9baa002899b89001375a6030602a6ea8009012452820243016001375a602c60266ea8018cc050c054004cc0526002601460226ea8c054c058006980103d87a8000a60103d8798000403c97ae030113754602860226ea8004c04cc050c050c050c050c050c050c050c040dd5003c528201a40348a99805a491a65787065637420536f6d6528646174756d29203d20646174756d00164028601c002601c601e00260146ea800e2c8038601200260086ea8026293454cc00924011856616c696461746f722072657475726e65642066616c73650013656400410776657273696f6e0504010d020a636f6c6c61746572616c0d010b62656e6566696369617279050d03000000",
    encoding: "hex",
    version: "v1alpha7",
};

export class Client {
    readonly #client: TRPClient;

    constructor(options: ClientOptions) {
        this.#client = new TRPClient(options);
    }

    async lockTx(args: LockParams): Promise<ResolveResponse> {
        return await this.#client.resolve({
            tir: LOCK_IR,
            args,
        });
    }
    async unlockTx(args: UnlockParams): Promise<ResolveResponse> {
        return await this.#client.resolve({
            tir: UNLOCK_IR,
            args,
        });
    }


    async submit(params: SubmitParams): Promise<void> {
        await this.#client.submit(params);
    }
}

// Create a default client instance
export const protocol = new Client({
    endpoint: DEFAULT_TRP_ENDPOINT,
    headers: DEFAULT_HEADERS,
    envArgs: DEFAULT_ENV_ARGS,
});
